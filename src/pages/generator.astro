---
import Layout from "../layouts/Layout.astro";
---

<Layout>
    <div class="container mx-auto">
        <div>
            <a href="/galerie" class="btn btn-secondary">Galerie SVG</a>
        </div>

        <!-- Layout principal avec deux colonnes -->
        <div class="flex flex-col lg:flex-row gap-6 min-h-screen">
            <!-- Colonne de gauche -->
            <div
                id="svg-container"
                class="flex-1 rounded-lg p-6 bg-secondary-content"
            >
                <h2 class="text-2xl font-bold mb-4"></h2>
                <p class="text-base-content/70 mb-4"></p>
                <div class="p-4 rounded-lg"></div>
            </div>

            <!-- Colonne de droite -->
            <div
                id="svg-output"
                class="flex-1 rounded-lg p-6 bg-secondary-content"
            >
                <h2 class="text-2xl font-bold mb-4"></h2>
                <p class="text-base-content/70 mb-4"></p>
                <div class="p-4 rounded-lg"></div>
            </div>
        </div>

        <div class="mt-6 bg-base-200 rounded-lg p-4">
            <div class="flex flex-col sm:flex-row gap-2">
                <input
                    id="user-prompt"
                    type="text"
                    placeholder="Tapez votre prompt ici..."
                    class="input input-bordered w-full"
                />
                <button
                    id="generate-button"
                    class="btn btn-soft btn-secondary w-full sm:w-auto"
                    >Generate</button
                >
                <input
                    id="svg-name"
                    type="text"
                    placeholder="Nom du SVG..."
                    class="input input-bordered w-full sm:w-auto"
                />
                <button
                    id="save-button"
                    class="btn btn-secondary w-full sm:w-auto"
                    >Enregistrer</button
                >
            </div>
        </div>
        <!-- <div id="svg-container" class="mt-4 p-4 bg-base-300 rounded-lg">
            </div>
            <pre id="svg-output" class="mt-2 bg-base-100 p-2 rounded"></pre> -->
    </div>
</Layout>

<script>
    //@ts-nocheck
    let promptList = [];
    const generateButton = document.getElementById("generate-button");
    const editButton = document.getElementById("edit-button");
    async function generateSVG(prompt) {
        console.log("Generating SVG for prompt:", prompt);
        const res = await fetch("/api/generateSVG", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify( prompt ),
        });
        const data = await res.json();
        return data.svg;
    }

    async function handleSubmit() {
        let prompt = "";
        let svgCode = "";
        const promptElement = document.getElementById("user-prompt");
        prompt = promptElement ? promptElement.value : "";
        console.log("submitted: ", prompt);

        promptList.length = 0;
        promptList.push({ role: "user", content: prompt });

        // message affiché sur votre console d'inspecteur dans le navigateur
        const svgContainer = document.getElementById("svg-container");

        svgContainer.innerHTML = `<span class="loading loading-ring loading-xl"></span>`;
        generateButton.disabled = true;
        // editButton.disabled = true;

        let svgOutput = document.getElementById("svg-output");

        let aiResponse = await generateSVG(promptList);

        const svgMatch = aiResponse.content.match(/<svg[\s\S]*?<\/svg>/i);
        aiResponse.content = svgMatch ? svgMatch[0] : "";
        console.log("svgCode: ", aiResponse.content);

        promptList.push(aiResponse);

        svgOutput.textContent = aiResponse.content;
        svgContainer.innerHTML = aiResponse.content;
        generateButton.disabled = false;
        // editButton.disabled = false;
    }
    if (generateButton) {
        generateButton.addEventListener("click", handleSubmit);
    }
    /*code pour pocketbase*/
    // async function saveSVG() {
    //     const name = document.getElementById("svg-name").value;
    //     const svgOutput = document.getElementById("svg-output").textContent;

    //     if (!name || !svgOutput) {
    //         alert("Donnez un nom et générez un SVG d'abord !");
    //         return;
    //     }

    //     try {
    //         const record = await pb.collection("svgs").create({
    //             name: name,
    //             code: svgOutput,
    //         });

    //         console.log("SVG enregistré:", record);
    //         alert("SVG enregistré avec succès !");
    //         document.getElementById("svg-name").value = "";
    //     } catch (err) {
    //         console.error("Erreur lors de l'enregistrement:", err);
    //         alert("Erreur lors de l'enregistrement.");
    //     }
    // }

    const saveButton = document.getElementById("save-button");
    // if (saveButton) {
    //     saveButton.addEventListener("click", saveSVG);
    // }
</script>
